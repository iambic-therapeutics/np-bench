# Helper file to handle all configs

[coverage:run]
# .coveragerc to control coverage.py and pytest-cov
omit =
    neuralplexer_benchmarks/_version.py

[coverage:report]
exclude_lines =
    pragma: nocover
    pragma: no cover
    raise NotImplementedError

[versioneer]
# Automatic version numbering scheme
VCS = git
style = pep440
versionfile_source = neuralplexer_benchmarks/_version.py
versionfile_build = neuralplexer_benchmarks/_version.py
tag_prefix = v

[tool:pytest]
testpaths = neuralplexer_benchmarks
filterwarnings =
    ignore::RuntimeWarning:importlib

[aliases]
test = pytest

[mypy]
plugins = pydantic.mypy

follow_imports = normal
strict_optional = True
warn_redundant_casts = True
no_implicit_reexport = False
warn_unused_configs = True
disallow_incomplete_defs = True
warn_unused_ignores = True
#disallow_any_generics = True
#disallow_untyped_decorators = True
#disallow_untyped_calls = True
#disallow_untyped_defs = True

# remaining arguments from `mypy --strict` which cause errors
;no_implicit_optional = True

[pydantic-mypy]
init_typed = False
warn_required_dynamic_aliases = False
warn_untyped_fields = False

[mypy-numpy]
ignore_missing_imports = True

[mypy-numpy.*]
ignore_missing_imports = True

[mypy-pytest]
ignore_missing_imports = True

[mypy-pint]
ignore_missing_imports = True

[mypy-msgpack]
ignore_missing_imports = True

[mypy-psutil]
ignore_missing_imports = True

[mypy-rdkit.*]
ignore_missing_imports = True

[mypy-nglview.*]
ignore_missing_imports = True

[mypy-plotly.*]
ignore_missing_imports = True

[mypy-ipywidgets.*]
ignore_missing_imports = True

[mypy-IPython.*]
ignore_missing_imports = True

[mypy-pandas]
ignore_missing_imports = True

[mypy-neuralplexer_benchmarks._version]
ignore_errors = True

[mypy-seaborn.*]
ignore_missing_imports = True

[mypy-pandas.*]
ignore_missing_imports = True

[mypy-DockQ.*]
ignore_missing_imports = True

[mypy-parallelbar.*]
ignore_missing_imports = True

[mypy-ruamel.*]
ignore_missing_imports = True

[mypy-s3fs.*]
ignore_missing_imports = True

[mypy-parmed.*]
ignore_missing_imports = True

[mypy-scipy.*]
ignore_missing_imports = True

[pylint.MASTER]
fail-under = 10.0
ignore = _version.py,versioneer.py

[pylint.BASIC]
variable-rgx = [a-z_][a-z0-9_]{0,30}$

[pylint.REPORTS]
evaluation = 10.0 - ((float(5 * error) / statement) * 10)
msg-template = '{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}'
reports = no
score = yes
output-format=parseable

[pylint.LOGGING]
logging-format-style=new

[pylint.FORMAT]
indent-after-paren=4
indent-string='    '
max-line-length=120
max-module-lines=1000
single-line-class-stmt=no
single-line-if-stmt=no

[pylint.DESIGN]
max-args=5
max-attributes=7
max-bool-expr=5
max-branches=12
max-locals=15
max-parents=7
max-public-methods=20
max-returns=6
max-statements=50
min-public-methods=2

[pylint.TYPECHECK]
ignored-modules = nglview,
                  ipywidgets,
                  numpy,
                  rdkit,
                  pydantic,
                  pydantic.typing,
                  pydantic.json

ignored-classes = pydantic,
                  numpy

[pylint.EXCEPTIONS]
overgeneral-exceptions=BaseException,
                       Exception
